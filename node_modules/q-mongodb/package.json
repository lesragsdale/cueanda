{
  "name": "q-mongodb",
  "version": "0.0.1",
  "author": {
    "name": "Brian Hein",
    "email": "brian@cannedcoding.com"
  },
  "description": "Q (promises) wrapper for the mongodb node.js package",
  "contributors": [
    {
      "name": "Brian Hein",
      "email": "brian@cannedcoding.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/canned/QMongoDB.git"
  },
  "main": "./q-mongodb.js",
  "keywords": [
    "Q",
    "promises",
    "MongoDB"
  ],
  "dependencies": {
    "mongodb": "*",
    "q": "*"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "license": "MIT",
  "readme": "Introduction\n============\n\nThis is a node.js module which wraps the [mongodb module](https://github.com/mongodb/node-mongodb-native) with the\n[q promises module](https://github.com/kriskowal/q).  It handles opening a db (and maintaining the open db object) as\nwell as accessing collections (creating them if need be).  If you query for the same db multiple times during the\nlifetime of your node app, you'll be handed the same open db object (unless you explicitly close the db with a call to\ncloseAll()).\n\nUsage\n=====\n\n    var QMongoDB = require('q-mongodb');\n\n    QMongoDB.db('my_db').then(function(db) {\n        return QMongoDB.collection(db, 'people');\n    }).then(function(collection) {\n        // Perform standard collection operations here\n    }).then(function() {\n        return QMongoDB.closeAll();\n    });",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/canned/QMongoDB/issues"
  },
  "homepage": "https://github.com/canned/QMongoDB",
  "_id": "q-mongodb@0.0.1",
  "_from": "q-mongodb@"
}
